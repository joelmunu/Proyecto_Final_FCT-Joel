openapi: 3.0.0
info:
  title: Documentación API de Productos
  version: 1.0.0
  description: API para gestionar productos
paths:
  /productos:
    get:
      summary: Obtener todos los productos
      responses:
        '200':
          description: Lista de productos obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Producto'
    post:
      summary: Crear un nuevo producto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Producto'
      responses:
        '200':
          description: Producto creado exitosamente
          content:
            text/plain:
              schema:
                type: string
  /productos/buscar:
      post:
        summary: Buscar un producto por nombre
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  nombre:
                    type: string
                    example: Producto1
        responses:
          '200':
            description: Producto encontrado
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Producto'
          '404':
            description: Producto no encontrado
  /productos/{id}:
    put:
      summary: Actualizar un producto existente
      parameters:
        - name: id
          in: path
          required: true
          description: ID del producto a actualizar
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Producto'
      responses:
        '200':
          description: Producto actualizado exitosamente
          content:
            text/plain:
              schema:
                type: string
    delete:
      summary: Eliminar un producto existente
      parameters:
        - name: id
          in: path
          required: true
          description: ID del producto a eliminar
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Producto eliminado exitosamente
          content:
            text/plain:
              schema:
                type: string
  /facturas:
    get:
      summary: Obtener todas las facturas
      responses:
        '200':
          description: Lista de facturas obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Factura'
    post:
      summary: Crear una nueva factura
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Factura'
      responses:
        '200':
          description: Factura creada exitosamente
          content:
            text/plain:
              schema:
                type: string
  /facturas/{id}:
    get:
      summary: Obtener una factura por ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la factura a obtener
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Factura obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Factura'
    delete:
      summary: Eliminar una factura por ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la factura a eliminar
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Factura eliminada exitosamente
          content:
            text/plain:
              schema:
                type: string
  /facturas/{id}/usuario/{dni}:
    post:
      summary: Agregar usuario a una factura
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la factura a la que se agregará el usuario
          schema:
            type: integer
            format: int64
        - name: dni
          in: path
          required: true
          description: DNI del usuario a agregar
          schema:
            type: string
      responses:
        '200':
          description: Usuario agregado exitosamente a la factura
          content:
            text/plain:
              schema:
                type: string
  /facturas/{id}/producto/{productId}:
    post:
      summary: Agregar producto a una factura
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la factura a la que se agregará el producto
          schema:
            type: integer
            format: int64
        - name: productId
          in: path
          required: true
          description: ID del producto a agregar
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Producto agregado exitosamente a la factura
          content:
            text/plain:
              schema:
                type: string
  /facturas/cliente/{dni}:
    get:
      summary: Obtener facturas de un cliente por DNI
      parameters:
        - name: dni
          in: path
          required: true
          description: DNI del cliente
          schema:
            type: string
      responses:
        '200':
          description: Facturas obtenidas exitosamente para el cliente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Factura'
  /pedidos:
    get:
      summary: Obtener todos los pedidos
      responses:
        '200':
          description: Lista de pedidos obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pedido'
    post:
      summary: Crear un nuevo pedido
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pedido'
      responses:
        '200':
          description: Pedido creado exitosamente
          content:
            text/plain:
              schema:
                type: string
  /pedidos/{id}:
    get:
      summary: Obtener un pedido por ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID del pedido a obtener
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Pedido obtenido exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pedido'
    delete:
      summary: Eliminar un pedido por ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID del pedido a eliminar
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Pedido eliminado exitosamente
          content:
            text/plain:
              schema:
                type: string
  /pedidos/{id}/usuario/{dni}:
    post:
      summary: Agregar usuario a un pedido
      parameters:
        - name: id
          in: path
          required: true
          description: ID del pedido al que se agregará el usuario
          schema:
            type: integer
            format: int64
        - name: dni
          in: path
          required: true
          description: DNI del usuario a agregar
          schema:
            type: string
      responses:
        '200':
          description: Usuario agregado exitosamente al pedido
          content:
            text/plain:
              schema:
                type: string
  /pedidos/{id}/producto/{productId}:
    post:
      summary: Agregar producto a un pedido
      parameters:
        - name: id
          in: path
          required: true
          description: ID del pedido al que se agregará el producto
          schema:
            type: integer
            format: int64
        - name: productId
          in: path
          required: true
          description: ID del producto a agregar
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Producto agregado exitosamente al pedido
          content:
            text/plain:
              schema:
                type: string
  /pedidos/cliente/{dni}:
    get:
      summary: Obtener pedidos de un cliente por DNI
      parameters:
        - name: dni
          in: path
          required: true
          description: DNI del cliente
          schema:
            type: string
      responses:
        '200':
          description: Pedidos obtenidos exitosamente para el cliente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pedido'
components:
  schemas:
    Producto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nombre:
          type: string
          example: Producto1
    Factura:
      type: object
      properties:
        id:
          type: integer
          format: int64
    Pedido:
      type: object
      properties:
        id:
          type: integer
          format: int64